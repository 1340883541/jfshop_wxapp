const Nav = require('../../utils/navigate.js');
const Ajax = require('../../utils/request.js');
const app = getApp();

// 日期选择器数据
const date = new Date()
const years = []
const months = []
const days = []
const hours = []
const minutes = []
const seconds = []

for (let i = 1990; i <= date.getFullYear() + 10; i++) {
    years.push(i)
}

for (let i = 1; i <= 12; i++) {
    i < 10 ? months.push('0' + i) : months.push(i)
}

for (let i = 1; i <= 31; i++) {
    i < 10 ? days.push('0' + i) : days.push(i)
}
for (let i = 1; i <= 24; i++) {
    i < 10 ? hours.push('0' + i) : hours.push(i)
}
for (let i = 0; i <= 60; i++) {
    i < 10 ? minutes.push('0' + i) : minutes.push(i)
}
for (let i = 0; i <= 60; i++) {
    i < 10 ? seconds.push('0' + i) : seconds.push(i)
}

Page({

    /**
     * 页面的初始数据
     */
    data: {

        // 立即结算支付弹框
        isShowPay: false,
        // 判断是否是Android || Ios
        isIos: true,

        // 提交订单的参数
        option: '',

        // 返回的参数
        goods: '',
        totalMoney: 0,
        totalPayMoney: 0,
        userIntegral: '0',
        tag: '0',

        goodsNumber: 0,

        // 订单id
        orderId: '',
        // 支付的积分金额
        payMoney: 0,
        // 积分
        isUseIntegral: true,

        // 备注
        remark: '',
        //立即结算按钮遮罩
        isbuy_zhezBtn: false,

        // 服务类订单模板
        temp_conf_arr: [],
        temp_conf: [
        ], //上传后台服务信息
        date: '',
        stardate: '',
        enddate: '',
        tempAddrIndex: 0,
        // 日期控制器
        years: years,
        year: date.getFullYear(),
        months: months,
        month: '',
        days: days,
        day: '',
        value: [],
        chooseSize: false,
        animationData: {},
        d_index: '',
        d_tindex: '',
        //时间控制器
        years2: years,
        year2: date.getFullYear(),
        months2: months,
        month2: '',
        days2: days,
        day2: '',
        hour: 1,
        hours: hours,
        minutes: minutes,
        minute: 0,
        seconds: seconds,
        second: 0,
        value2: [],
        chooseSize2: false,
        animationData2: {},
        d_index2: '',
        d_tindex2: '',
        isShowTxtarea:true,
        d_tindex3: '',

        // 邮寄方式
        is_server: 1, //为0是代表实体类商品，1代表服务类商品
        mail_type: '',
    },
    //生命周期函数--监听页面加载
    onLoad: function(options) {
        // 获取设备样式
        let system = wx.getSystemInfoSync();
        if (system.system.toLowerCase().indexOf('ios') > -1) {
            this.setData({
                isIos: true
            })
        } else {
            this.setData({
                isIos: false
            })
        }
        this.setData({
            goodsNumber: options.number
        })
        // 获取传递的参数
        this.data.option = options;
        this.data.option.openid = app.globalData.openId || wx.getStorageSync('openid');
        this.fetchData();

        // 订单模板
        // 获取当前日期（年月日）
        var timestamp = Date.parse(new Date());
        var date = new Date(timestamp);
        //获取年份  
        var Y = date.getFullYear();
        //获取月份  
        var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1);
        //获取当日日期 
        var D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
        this.setData({
            month: M,
            day: D,
            month2: M,
            day2: D,
            // date: Y + '-' + M + '-' + D,
            stardate: Y - 1 + '-' + M + '-' + D,
            enddate: Y + 1 + '-' + M + '-' + D,

        })
        this.data.years.map((v, index) => {
            if (v == Y) {
                this.setData({
                    value: [index, this.data.month-1, this.data.day-1]
                })
                return;
            }
        })
        this.data.years.map((v, index) => {
            if (v == Y) {
                this.setData({
                    value2: [index, this.data.month2-1, this.data.day2-1]
                })
                return;
            }
        })
    },
    // 获取结算的数据
    fetchData: function() {
        wx.showLoading({
            title: '正在加载中...',
        });
        let _this = this;
        Ajax.ajaxFunc({
            url: 'api/order/presentPage',
            data: _this.data.option || wx.getStorageSync('openid'),
            success: function(res) {
                wx.hideLoading();
                if (res.code == 1) {
                    _this.setData({
                        totalMoney: res.data.total_goods_money,
                        totalPayMoney: res.data.total_pay_money,
                        goods: res.data.goods,
                        temp_conf_arr: res.data.goods.temp_conf.map(val => {
                            val.idx = 0;
                            val.date = '';
                            val.dateall = '';
                            val.t_tareaVal = '';
                            return val;
                        }),
                        userIntegral: res.data.user_info.integral,
                        tag: res.data.user_info.tag,
                        is_server: res.data.is_server
                    });
                    // console.log(_this.data.temp_conf_arr)
                     console.log(_this.data.is_server)
                    if (res.data.total_goods_money <= res.data.user_info.integral) {
                        _this.setData({
                            isUseIntegral: true
                        })
                    } else {
                        _this.setData({
                            isUseIntegral: false
                        })
                    }
                } else {
                    wx.showToast({
                        title: res.msg,
                        icon: "none"
                    });
                    if (res.code == 4) {
                        wx.setStorageSync('openid', '');
                        wx.setStorageSync('isLogin', 0);
                        wx.clearStorageSync();
                        app.globalData.isLogin = 0;
                        wx.navigateTo({
                            url: '../verifyPhone/verifyPhone'
                        })
                    }

                }
            }
        });
    },
    // 跳转到商品清单页面
    skipInventoryFn: function() {
        let _this = this;
        Nav.nav('navigateTo', '../goodsInventory/goodsInventory', {
            goodsList: JSON.stringify(_this.data.goods)
        })
    },
    submit: function(e) {
        // console.log(e.detail.formId)
        // console.log('模板发送');
        Ajax.ajaxFunc({
            url: 'api/index/getFormId',
            data: {
                openid: app.globalData.openId || wx.getStorageSync('openid'),
                formId: e.detail.formId
            },
            success: function(r) {
                // console.log(JSON.stringify(r))
            }
        })
    },
    // 立即结算
    sureOrderFn: function() {
        this.setData({
            isbuy_zhezBtn: true
        })
        let _this = this;
        let param = {};
        param.total_money = this.data.totalPayMoney;
        param.total_goods_money = this.data.totalMoney;
        param.goods_ids = this.data.option.goods_id;
        param.goods_sub_ids = this.data.option.goods_sub_id;
        param.goods_num = this.data.option.number;
        param.openid = app.globalData.openId || wx.getStorageSync('openid');
        param.remark = this.data.remark;
        param.temp_conf = JSON.stringify(this.data.temp_conf);
        if (this.data.is_server == 0) { param.mail_type = 1 }
        // console.log(param)
        Ajax.ajaxFunc({
            url: 'api/order/createOrder',
            data: param,
            success: function(res) {
                if (res.code == 1) {
                    wx.setStorageSync('isRefreshCart', 1);
                    wx.setStorageSync('isRefreshPerson', 1);
                    if (_this.data.temp_conf.length > 0) {
                        // 服务类商品
                        if (_this.data.temp_conf[0].tempid != 0) {
                            console.log(_this.data.temp_conf[0].tempid)
                            wx.showToast({
                                title: '欢迎您在金鼎管家中心下单，我们的管家将在24小时内与您联系!',
                                icon: 'none',
                                duration: 3000,
                                mask: true,
                            });

                            setTimeout(function () {
                                Nav.nav('navigateTo', '../orderAll/orderAll', { state: 2 });
                            }, 3000)
                        }
                    }else{
                        _this.setData({
                            isShowPay: true,
                            payMoney: res.data.money,
                            orderId: res.data.id,
                            isbuy_zhezBtn: false
                        });
                    }
                } else {
                    if (res.code == -1) {
                        wx.showModal({
                            title: '提示',
                            content: '您暂没有绑定手机号，不能提交订单。确认要去绑定手机号吗？',
                            confirmColor: "#a88c5d",
                            success: function(e) {
                                if (e.confirm) {
                                    Nav.nav('navigateTo', '../verifyPhone/verifyPhone');
                                }
                            }
                        });
                    } else {
                        wx.showToast({
                            title: res.msg,
                            icon: 'none'
                        });
                    }
                    setTimeout(function() {
                        _this.setData({
                            isbuy_zhezBtn: false
                        })
                    }, 1000)
                }
            }
        })
        setTimeout(function () {
            _this.setData({
                isbuy_zhezBtn: false
            })
        }, 3500)
    },
    // 支付成功
    paySucFn: function(e) {
        let _this = this;
        Nav.nav('navigateTo', '../orderDetail/orderDetail', { id: _this.data.orderId });
        setTimeout(function () {
            _this.setData({
                isShowPay: false
            });
        }, 300)
        // Ajax.ajaxFunc({
        //     url: 'api/order/integralPay',
        //     data: {
        //         id: _this.data.orderId,
        //         money: _this.data.payMoney,
        //         openid: app.globalData.openId || wx.getStorageSync('openid')
        //     },
        //     success: function(res) {
        //         if (res.code == 1) {
        //             // wx.showToast({
        //             //     title: '支付成功'
        //             // });
        //             Nav.nav('redirectTo', '../paySuc/paySuc', {
        //                 money: _this.data.payMoney,
        //                 origin: 'buy'
        //             })
                    
        //         } else {
        //             wx.showToast({
        //                 title: res.msg,
        //                 icon: 'none'
        //             })
        //             setTimeout(function() {
        //                 Nav.nav('redirectTo', '../orderAll/orderAll', {
        //                     state: 0
        //                 })
        //             }, 400);
        //         }
        //         _this.setData({
        //             isShowPay: false
        //         });
        //     }
        // })
    },
    // 获取订单备注
    getTextareaVal: function(e) {
        this.data.remark = e.detail.value;
    },
    // 隐藏支付弹框
    hidePayFn: function() {
        this.setData({
            isShowPay: false
        });
        setTimeout(function() {
            Nav.nav('redirectTo', '../orderAll/orderAll', {
                state: 0
            })
        }, 400);
    },

    // 服务类信息填写操作
    //日期选择器
    bindDateChange: function (e) {
        // this.setData({
        //     date: e.detail.value
        // })
    },
    bindChange: function (e) {
        const val = e.detail.value
        this.setData({
            year: this.data.years[val[0]],
            month: this.data.months[val[1]],
            day: this.data.days[val[2]]
        })
    },
    chooseSezi: function (e) {
        this.setData({
            // d_index: e.currentTarget.dataset.index,
            d_tindex: e.currentTarget.dataset.tindex,
            isShowTxtarea: false,
        })
        // 用that取代this，防止不必要的情况发生
        var that = this;
        // 创建一个动画实例
        var animation = wx.createAnimation({
            // 动画持续时间
            duration: 200,
            // 定义动画效果，当前是匀速
            timingFunction: 'linear'
        })
        // 将该变量赋值给当前动画
        that.animation = animation
        // 先在y轴偏移，然后用step()完成一个动画
        animation.translateY(200).step()
        // 用setData改变当前动画
        that.setData({
            // 通过export()方法导出数据
            animationData: animation.export(),
            // 改变view里面的Wx：if
            chooseSize: true
        })
        // 设置setTimeout来改变y轴偏移量，实现有感觉的滑动
        setTimeout(function () {
            animation.translateY(0).step()
            that.setData({
                animationData: animation.export()
            })
        }, 200)
    },
    hideModal: function (e) {
        var that = this;
        var animation = wx.createAnimation({
            duration: 200,
            timingFunction: 'linear'
        })
        that.animation = animation
        animation.translateY(200).step()
        that.setData({
            animationData: animation.export(),
            isShowTxtarea: true,
        })
        setTimeout(function () {
            animation.translateY(0).step()
            that.setData({
                animationData: animation.export(),
                chooseSize: false
            })
        }, 200)
    },
    quedingModal() {
        this.setData({
            month: Number(this.data.month) < 10 ? '0' + Number(this.data.month) : Number(this.data.month),
            day: Number(this.data.day) < 10 ? '0' + Number(this.data.day) : Number(this.data.day)
        })
        this.setData({
            ['temp_conf_arr[' + this.data.d_tindex + '].date']: this.data.year + '-' + this.data.month + '-' + this.data.day
        })
        console.log(this.data.temp_conf_arr[this.data.d_tindex].date)
        this.data.years.map((v, index) => {
            if (v == this.data.year) {
                this.setData({
                    value: [index, this.data.month - 1, this.data.day - 1]
                })
                return;
            }
        })
        this.hideModal();
    },
    bindChange2: function (e) {
        const val = e.detail.value
        this.setData({
            year2: this.data.years2[val[0]],
            month2: this.data.months2[val[1]],
            day2: this.data.days2[val[2]],
            hour: this.data.hours[val[3]],
            minute: this.data.minutes[val[4]],
            second: this.data.seconds[val[5]],
        })
    },
    chooseSezi2: function (e) {
        this.setData({
            // d_index2: e.currentTarget.dataset.index,
            d_tindex2: e.currentTarget.dataset.tindex,
            isShowTxtarea: false,
        })
        // 用that取代this，防止不必要的情况发生
        var that = this;
        // 创建一个动画实例
        var animation = wx.createAnimation({
            // 动画持续时间
            duration: 200,
            // 定义动画效果，当前是匀速
            timingFunction: 'linear'
        })
        // 将该变量赋值给当前动画
        that.animation = animation
        // 先在y轴偏移，然后用step()完成一个动画
        animation.translateY(200).step()
        // 用setData改变当前动画
        that.setData({
            // 通过export()方法导出数据
            animationData2: animation.export(),
            // 改变view里面的Wx：if
            chooseSize2: true
        })
        // 设置setTimeout来改变y轴偏移量，实现有感觉的滑动
        setTimeout(function () {
            animation.translateY(0).step()
            that.setData({
                animationData2: animation.export()
            })
        }, 200)
    },
    hideModal2: function (e) {
        var that = this;
        var animation = wx.createAnimation({
            duration: 200,
            timingFunction: 'linear'
        })
        that.animation = animation
        animation.translateY(200).step()
        that.setData({
            animationData2: animation.export(),
            isShowTxtarea: true,
        })
        setTimeout(function () {
            animation.translateY(0).step()
            that.setData({
                animationData2: animation.export(),
                chooseSize2: false
            })
        }, 200)
    },
    quedingModal2() {
        this.setData({
            hour: Number(this.data.hour) < 10 ? '0' + Number(this.data.hour) : Number(this.data.hour),
            minute: Number(this.data.minute) < 10 ? '0' + Number(this.data.minute) : Number(this.data.minute),
            second: Number(this.data.second) < 10 ? '0' + Number(this.data.second) : Number(this.data.second),
        })
        this.setData({
            ['temp_conf_arr[' + this.data.d_tindex2 + '].dateall']: this.data.year2 + '-' + this.data.month2 + '-' + this.data.day2 + '  ' + this.data.hour + '：' + this.data.minute + '：' + this.data.second
        })
        // console.log(this.data.temp_conf_arr[this.data.d_tindex2].dateall)
        this.data.years2.map((v, index) => {
            if (v == this.data.year2) {
                this.setData({
                    value2: [index, this.data.month2 - 1, this.data.day2 - 1, this.data.hour - 1, this.data.minute, this.data.second]
                })
                return;
            }
        })
        this.hideModal2();
    },
    // 下拉数据选择器
    bindPickerChange: function (e) {
        // console.log(e)
        // console.log(e.detail.value)
        let tindex = e.currentTarget.dataset.tindex;
        this.setData({
            ['temp_conf_arr[' + tindex + '].idx']: e.detail.value
        })
    },
    // 文本框
    bindInputFunc(e) {
        let viewfield = e.currentTarget.dataset.viewfield;
    },
    // 文本域
    bindTextateaFunc(e) {
        console.log(e.detail.value)
        this.setData({
            d_tindex3: e.currentTarget.dataset.tindex,
        })
        this.setData({
            ['temp_conf_arr[' + this.data.d_tindex3 + '].t_tareaVal']: e.detail.value
        })
    },
    //多选
    checkboxChange(e) {
        let index = e.currentTarget.dataset.index,
            tindex = e.currentTarget.dataset.tindex;
    },


    // 立即结算提交
    formSubmit(e) {
        // console.log(e)
        // console.log(e.detail.value)
        let obj = e.detail.value, uploadList = []
        for (let [k, v] of Object.entries(obj)) {
            let keyAr = k.split('__');
            uploadList.push({
                goods: keyAr[0],
                goodsubid: keyAr[1],
                tempid: keyAr[2],
                ismust: keyAr[4],
                [keyAr[3]]: v,
                isvalue: v,
            })
        }
        let isCanSubmit = uploadList.every(v => {
            if (v.ismust == 1 && (v.isvalue && v.isvalue.length > 0)) {
                return true;
            } else {
                if (v.ismust == 0) {
                    return true;
                }
                else {
                    return false;
                }
            }
        })
        // console.log(isCanSubmit)
        if (!isCanSubmit) {
            wx.showToast({
                title: '请填写完带*号的信息内容',
                icon: 'none'
            })
        } else {
            this.setData({
                temp_conf: uploadList
            })
            this.sureOrderFn();
        }
    },

    // 邮寄
    // 选择邮寄方式
    meailChangeFn(e) {
        wx.showToast({
            title: '建设中，敬请期待！',
            icon: 'none'
        })
    }

})